
# Tmux contains many aliases for the same commands, which can be confusing.
# Here are my guidelines for consistency:
#   Use 'bind' rather than 'bind-key'
#   Use 'set' rather than 'set-option'
#   Use 'set -w' rather than 'setw' or 'set-window-option'

# Ctrl+Space r - Reload this file
bind r source-file ~/.tmux.conf

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

set -g allow-rename off

# ------------------------------------------------------------------------------
# Prefix key - Ctrl+Space (very easy to type, no conflicts)

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# ------------------------------------------------------------------------------
# Copy Mode - Setup to be like vim.

# Easily start copy mode by just spaming the prefix twice
bind C-Space copy-mode
bind Space copy-mode

# Start copy-mode and scroll up a page
bind C-u copy-mode -u
# Vim-like bindings
set -w -g mode-keys vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind 'p' paste-buffer

# ------------------------------------------------------------------------------
# Panes + Windows

bind q killp
bind-key C-q kill-window

bind-key x kill-pane
bind-key C-x kill-pane

# Switch windows with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# More convenient because you can just hold Ctrl for the entire binding
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind -r H select-window -t :-
bind -r L select-window -t :+

bind v split-window -h
bind p split-window -v

bind | split-window -h
bind \ split-window -h # Save holding shift
bind - split-window -v

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# ------------------------------------------------------------------------------
# Window titles
# I like to use a very minimal prompt in zsh, but I also need to know what host
# I'm currently on. So the most important feature of title, to me, is to
# display the current hostname

set -g set-titles on
set -g set-titles-string "#T"

# ------------------------------------------------------------------------------
# Misc

set -g history-limit 100000
bind S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
